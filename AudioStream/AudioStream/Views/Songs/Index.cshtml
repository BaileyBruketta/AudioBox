@model IEnumerable<AudioStream.Models.Song>

@{
    ViewData["Title"] = "Index";
}

<h1>Stream</h1>

@*<p>
    <a asp-action="Create">Create New</a>
</p>
    *@
<p>New Music - @ViewData["GenreSelection"] @ViewData["ArtistSelection"]</p>


<form asp-controller="Songs" asp-action="Index">
    <p>
        Genre Selection: 
        <select name="genre">
            <option value="all">all</option>
            
            <option value="phonk">phonk</option>
            <option value="vapor">vapor</option>
            <option value="drill">drill</option>
            <option value="new wave">new wave</option>
            <option value="trap">trap</option>
            <option value="crunk">crunk</option>
            <option value="old school">old school</option>
            <option value="distorted 808s">distorted 808s</option>
           

            <option value="witch house">witch house</option>
            <option value="shoegaze">shoegaze</option>
            <option value="ambient">ambient</option>
            <option value="vaporwave">vaporwave</option>
            <option value="seapunk">seapunk</option>
            <option value="indie">indie</option>
            <option value="dream pop">dream pop</option>

            <option value="psychedelic rock">psychedelic rock</option>
            <option value="alternative rock">alternative rock</option>
            <option value="math rock">math rock</option>
            <option value="hardcore">hardcore</option>
            <option value="post hardcore">post hardcore</option>
            <option value="metal">metal</option>
            <option value="death metal">death metal</option>
            <option value="house music">house music</option>
            <option value="soul">soul</option>
            <option value="jazz">jazz</option>
            <option value="electronic jazz">electronic jazz</option>
            <option value="r&b">r&b</option>
            <option value="reggae">reggae</option>
            <option value="lo-fi">lo-fi</option>
            <option value="classic dance">classic dance</option>
            <option value="deep house">deep house</option>
            <option value="progressive house">progressive house</option>
            <option value="trance">trance</option>
            <option value="dubstep2008">dubstep (2008)</option>
            <option value="hardstyle">hardstyle</option>
            <option value="riddim">riddim</option>
            <option value="drum n bass">drum n bass</option>
            <option value="jungle">jungle</option>
        </select>
        Artist Search:
        <input type="text" name="artistSelection" class="small"/>
        <input type="submit" value="filter songs" />
    </p>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <h4>Music</h4>
            </th>
            

            <th>
                <h4>Title</h4>
            </th>
            <th></th>
            <th>
                <h4>Likes</h4>
            </th>
            <th></th>
            <th>
                @*@Html.DisplayNameFor(model => model.ArtistName) *@
                <h4>Artist</h4>
            </th>
            <th>
                <h4>Genre</h4>
            </th>
            <th>
                <h4>Release Date</h4>
            </th>

            <th></th>
        </tr>
    </thead>
      
    <tbody>
        @foreach (var item in Model)
        {
            
            <tr>
                <td>
                    <audio controls preload="auto" onended="endSong(id)" onplay="playSong(id)" class="songs" id="@item.Id">
                        <source src="@Url.Content("~/"+item.Title+".mp3")" type="audio/mpeg">
                    </audio>
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td></td>
                <td>
                    @Html.DisplayFor(modelItem => item.Likes)
                    <form asp-controller="Songs" asp-action="LikeSong">
                        
                        <input type="submit" value="Like" item="song" />
                    </form>
                </td>
                <td></td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArtistName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>

                @*
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                *@
            </tr>
        }
    </tbody>
</table>

<script src="~/js/site.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
@*
<script type="text/javascript">
    $(document).ready(function () {
        init();
        function init() {
            var audioArray = document.getElementsByClassName('songs');
            var i = 0;
            audioArray[i].play();
            for (i = 0; i < audioArray.length - 1; ++i) {
                audioArray[i].addEventListener('ended', x()); //{
                //var currentSong = e.target;
                //var next = $(currentSong).nextAll('audio');
                //if (next.length) $(next[0]).trigger('play');
                //   i++;
                //  audioArray[i].play();
                //});
            }            
        }
        function x() {
            i++;
            audioArray[i].play();
        }
    })    
</script>
    *@
@*///////////////////////////////////////// This fires off when a song is ended////////////*@
<script type="text/javascript">
    function endSong(id)
    { 
        var   i                  = 0                                       ;  
        var   audioArray         = document.getElementsByClassName('songs'); //get all songs on the page 
        while (audioArray[i].id != id) { i++; }                              //check if we have iterated to the value of the song that has just played
        i                       += 1;                                        //move value to next song
        audioArray[i].play()                                               ; //play the next song
    }
</script>
@*/////////////////////////////////////// This stops all songs that are playing aside from the one we want to play ///////*@
<script type="text/javascript">
    function playSong(id)
    {
        var i          = 0                                                 ; 
        var audioArray = document.getElementsByClassName('songs')          ; //get all songs on page
        for (i = 0; i < audioArray.length; i++)                              //iterate through songs
        {
            if (audioArray[i].id != id) { audioArray[i].pause();}            //pause any song that doesnt have the id that was passed to the function
        }
    }
</script>
@*TODO :  REPLAY BUTTON &&&& COUNT REPLAYS VS PLAYS*@




